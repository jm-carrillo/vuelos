{
	"info": {
		"_postman_id": "82c514aa-f8d4-4a62-9b1d-1f8b542635b7",
		"name": "Aerolinea",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24763581"
	},
	"item": [
		{
			"name": "Agregar Aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"aerolinea_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"Avianca\",\r\n    \"descripcion\": \"aerolinea colombiana\",\r\n    \"fechaFundacion\": \"2022-07-31\",\r\n    \"paginaWeb\": \"www.avianca.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airlines",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar Aerolinea con fecha invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.mensaje).to.eql(\"La fecha de fundacion es mayor que la fecha actual\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"Avianca\",\r\n    \"descripcion\": \"aerolinea colombiana\",\r\n    \"fechaFundacion\": \"2025-07-31\",\r\n    \"paginaWeb\": \"www.avianca.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airlines",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener  Aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{aerolinea_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener Aerolinea que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.mensaje).to.eql(\"La aerolinea con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{$guid}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{$guid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener  todas las Aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of categorias > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar una Aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"Latam\",\r\n    \"descripcion\": \"aerolinea colombiana\",\r\n    \"fechaFundacion\": \"2019-07-31\",\r\n    \"paginaWeb\": \"www.latam.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airlines/{{aerolinea_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar una Aerolinea que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.mensaje).to.eql(\"La aerolinea con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"Latam\",\r\n    \"descripcion\": \"aerolinea colombiana\",\r\n    \"fechaFundacion\": \"2019-07-31\",\r\n    \"paginaWeb\": \"www.latam.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airlines/{{$guid}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{$guid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar Aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{aerolinea_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar Aerolinea que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.mensaje).to.eql(\"La aerolinea con el id dado no existe\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airlines/{{$guid}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airlines",
						"{{$guid}}"
					]
				}
			},
			"response": []
		}
	]
}